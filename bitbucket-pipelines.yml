image: node:22

definitions: 
  steps:

    - step: &set-environment
        name: Set Environment
        script:
          - replaced
        artifacts:
          - scripts/**

    - step: &set-environment-variables
        name: Set Environment Variables
        script:
          - chmod +x scripts/set_env_vars.sh
          - scripts/set_env_vars.sh
        artifacts:
          - .env
          - aws_deploy_env.sh

    - step: &install-dependencies
        name: Install Dependencies
        caches:
          - node
        script:
          - npm install
        artifacts:
          - node_modules/**

    - step: &build-nodejs
        name: Build NodeJS
        script:
          - npm run build
        artifacts:
          - dist/**

    - step: &copy-files
        name: Copy Files
        script:
          - cp -R .env appspec.yml package.json ecosystem.config.js scripts/* src/email-templates src/assets src/temp-files dist
        artifacts:
          - dist/**

    - step: &deploy-to-aws
        name: Deploy to AWS
        script:
          - source aws_deploy_env.sh
          - apt-get update
          - apt-get install -y zip
          - cd dist
          - zip -r backend.zip .
          - pipe: atlassian/aws-code-deploy:1.6.0
            variables:
              AWS_DEFAULT_REGION: $AWS_DEPLOYMENT_REGION
              AWS_ACCESS_KEY_ID: $AWS_DEPLOYMENT_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_DEPLOYMENT_SECRET_ACCESS_KEY
              S3_BUCKET: $AWS_DEPLOYMENT_COMMON
              VERSION_LABEL: $AWS_DEPLOYMENT_COMMON_2
              APPLICATION_NAME: $AWS_DEPLOYMENT_COMMON
              COMMAND: 'upload'
              ZIP_FILE: 'backend.zip'
          - pipe: atlassian/aws-code-deploy:1.6.0
            variables:
              AWS_DEFAULT_REGION: $AWS_DEPLOYMENT_REGION
              AWS_ACCESS_KEY_ID: $AWS_DEPLOYMENT_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_DEPLOYMENT_SECRET_ACCESS_KEY
              S3_BUCKET: $AWS_DEPLOYMENT_COMMON
              APPLICATION_NAME: $AWS_DEPLOYMENT_COMMON
              DEPLOYMENT_GROUP: $AWS_DEPLOYMENT_COMMON_2
              VERSION_LABEL: $AWS_DEPLOYMENT_COMMON_2
              IGNORE_APPLICATION_STOP_FAILURES: 'true'
              FILE_EXISTS_BEHAVIOR: 'OVERWRITE'
              COMMAND: 'deploy'
              WAIT: 'true'

pipelines:
  branches:

    test:
      - step:
          <<: *set-environment
          script:
            - sed -i -E 's/ENV/test/g' scripts/set_env_vars.sh
            - sed -i 's/ENV/test/g' scripts/application_start.sh
      - step: *set-environment-variables
      - step: *install-dependencies
      - step: *build-nodejs
      - step: *copy-files
      - step: *deploy-to-aws
  
    prod:
      - step:
          <<: *set-environment
          script:
            - sed -i -E 's/ENV/prod/g' scripts/set_env_vars.sh
            - sed -i 's/ENV/prod/g' scripts/application_start.sh
      - step: *set-environment-variables
      - step: *install-dependencies
      - step: *build-nodejs
      - step: *copy-files
      - step: *deploy-to-aws
